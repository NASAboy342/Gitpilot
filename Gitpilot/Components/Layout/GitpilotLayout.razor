@inherits LayoutComponentBase
@using Gitpilot.Components.Common
@using Gitpilot.Models
@using Gitpilot.Services

<div class="page">
    <article class="content">
        @Body
    </article>
    <div class="side-nav-bar">
        <div class="app-name-cotainer">
            <div class="gitpiot-name">Gitpilot</div>
        </div>
    </div>
    <div class="quick-access-bar">
        <button>Undo    </button>
        <button>Redo    </button>
        <button>Fetch   </button>
        <button>Pull    </button>
        <button>Push    </button>
        <button>Branch  </button>
        <button>Stash   </button>
        <button>Pop     </button>
        <button class="plus-button" @onclick="TuggleCustomDialogVisibility">+</button>
    </div>
    <CustomDialog 
    IsVisible=isCustomDialogVisible 
    OnVisibilityFalse="TuggleCustomDialogVisibility"
    >
        <div class="dialog-container">
            <div><CustomButton>Clone Repository</CustomButton></div>
            <div @onclick="HandleFilePicker"><CustomButton>Open Repository</CustomButton></div>
        </div>
        <div>@SelectedRepo?.FolderPath</div>
    </CustomDialog>
</div>

@code {
    private bool isCustomDialogVisible = false;
    private FolderResult? SelectedRepo;
    private void TuggleCustomDialogVisibility()
    {
        isCustomDialogVisible = !isCustomDialogVisible;
    }
    private void TuggleCustomDialogVisibilityOff()
    {
        isCustomDialogVisible = false;
    }
    private async Task HandleFilePicker()
    {
        var windowsFolderPicker = new WindowsFolderPickerService();
        SelectedRepo = await windowsFolderPicker.PickFolderAsync();
    }
}
