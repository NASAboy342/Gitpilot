<path d="M @_positionX 13 C @_cX1 @_cY1, @_cX2 @_cY2, @_fromPositionX 26" stroke="FromRgbColor" fill="transparent" stroke-width="3"/>
<line x1="@_positionX" x2="@_positionX" y1="13" y2="0" stroke="@RgbColor" stroke-width="3"></line>
<circle cx="@_positionX" cy="13" r="5" fill="@RgbColor"></circle>
<line x1="@_positionX" x2="@_positionX" y1="13" y2="26" stroke="@RgbColor" stroke-width="3"></line>

@code {
    [Parameter]
    public int LineIndex { get; set; } = 1;
    [Parameter]
    public string RgbColor { get; set; } = "rgb(0, 120, 150)";

    [Parameter]
    public int FromLineIndex { get; set; } = 2;
    [Parameter]
    public string FromRgbColor { get; set; } = "rgb(0, 120, 150)";

    private int _positionX => LineIndex * 10 * 2;

    private int _fromPositionX => FromLineIndex * 10 * 2;

    private int _cX1 => (_positionX + _fromPositionX) / 2;
    private int _cY1 => 0;

    private int _cX2 => _fromPositionX;
    private int _cY2 => 26 / 2;

    protected override void OnInitialized()
    {
        var v1 = RgbColor;
        var v2 =FromRgbColor;
        var v3 = _positionX;
        var v4 =_fromPositionX;
        var v5 = _cX1;
        var v6 =_cY1;

        var v7 = _cY1;
        var v8 = _cX2;
    }
}
